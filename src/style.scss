@import url("https://fonts.googleapis.com/css2?family=Bitter:wght@100;400;700;900&display=swap");
$primary: #ff9e3d;
$secondary: #0061c2;
$background: #271f1d;
$white: #eee;
$page-padding: 10px;

ul {
  list-style-type: none;
}
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
}
body {
  background: $background;
  color: $white;
  font-family: "Bitter", serif;
}
.content {
  text-align: center;
  padding: $page-padding;
}
main {
  text-align: center;
}
h1 {
  color: $primary;
}
/* <span className="dropdown-label">{label}</span>
      <div className='dropdown-header dropdown-cell'>{selected}</div>
      <ul className={cn("dropdown-list", { "dropdown-list--show": show })}>
        {options.map(({ value, label }) => (
          <li
            onClick={()=>setSelected(value)}
            className={cn("dropdown-item dropdown-cell", {
              "dropdown-item--selected": selected === value,
            })} */
%pointer {
  cursor: pointer;
}
%fit-content {
  width: fit-content;
}
%flex {
  display: flex;
}
.accent-text {
  color: $secondary;
}
.primary-text {
  color: $primary;
}
.big-text {
  margin-bottom: 2rem;
  line-height: 0.8em;
  // font-size: 8em;
  // break-inside: avoid;
  // white-space: nowrap;
  // text-align: center;
  // margin: auto;
  // min-width: fit-content;
  font-size: max(10vw);
}
.low-opacity {
  opacity: 0.5;
}
.dropdown-container {
  margin-inline: auto;
  margin-block: 1.5em 100px;
  @extend %flex;
  flex-direction: column;
  @extend %fit-content;
  text-align: center;
  position: relative;
}
.dropdown-cell {
  padding: 10px 30px;
  width: 100px;
  background: transparentize($primary, 0.95);
  /* background-color: brown; */
}
.dropdown-header {
  height: fit-content;
  display: inline-block;
  $downscale-amount: 25%;
  background: desaturate(
    darken($primary, $downscale-amount),
    $downscale-amount * 3
  );
  position: relative;
  margin-inline: auto;
  @extend %pointer;
}
.dropdown-list-wrapper {
  transform: translateY(100%);
  position: absolute;
  bottom: 0;
  right: 0;
  overflow: hidden;
  pointer-events: none;
}
.dropdown-list {
  pointer-events: initial;
  transform: translateY(-100%);
  transition: 0.5s transform ease-in-out;
  margin-left: auto;
  position: relative;
  @extend %fit-content;
  @extend %pointer;
  &::before {
    content: "";
    position: absolute;
    inset: 0;
    background: $background;
    z-index: -2;
  }
}
.dropdown-list--show {
  transform: none;
}
.dropdown-item {
  position: relative;
  &--selected {
    background: transparentize($primary, 0.5);
  }
  &::before {
    transition: 0.2s opacity ease-in-out;
    position: absolute;
    content: "";
    inset: 0;
    background-color: $primary;
    opacity: 0;
    z-index: -1;
  }
  &:hover::before {
    opacity: 0.7;
  }
}
// $svg-sizes: var(--size, 20%);
svg {
  width: 100%;
  height: 100%;
}
.svg-wrapper {
  @extend %pointer;
  flex-basis: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  // $svg-sizes: 100%;
  // box-sizing: border-box;
  // width: 50%;
  // aspect-ratio: 1/1;
  // height: fit-content;
  // min-width: $svg-sizes;
  // min-height: $svg-sizes;
  // width: $svg-sizes;
  // height: $svg-sizes;
  border-radius: 100%;
}
[title^="Fox"] {
  aspect-ratio: 1/1;
  box-sizing: border-box;
  background: $primary;
  padding: min(30px, 2vw);

  // & > svg{
  // margin: 30px;
  // }
}
// [title^="Bez"] {
//   background-color: white;
//   // height: min-content;
// }
.svgs-container {
  @extend %flex;
  justify-content: center;
  gap: $page-padding;
  align-items: stretch;
  // background-color: $primary;
}

.fullscreen {
  position: fixed;
  inset: 0;
  padding: $page-padding * 0.5;
  @extend %flex;
  justify-content: center;
  align-items: center;
  z-index: 100;
  background-color: transparentize(black, 0.5);
  & > *:last-child {
    position: relative;
    z-index: 100;
  }
  & .gatsby-image-wrapper {
    &,
    & * {
      height: 100%;
      width: 100%;
      object-fit: contain !important;
    }
  }
}
// .fullscreen-bg {
//   position: absolute;
//   z-index: 1;
//   inset: 0;
//   background-color: transparentize(black, 0.5);
// }
header,
.dropdown-container,
.technologies {
  z-index: 50;
}
.gallery {
  box-sizing: border-box;
  @extend %flex;
  flex-direction: column;
  gap: $page-padding;
}
.gallery-image {
  @extend %pointer;
  // width: 100%;
  // height: 100%;
}
* + section {
  margin-top: 10 * $page-padding;
}
.video + .video {
  margin-top: 3 * $page-padding;
}
.dropdown-label{
	background-color: transparentize($background, .1);
	padding-block: 10px;
	padding-left: 30px;
}
@media screen and (min-width: 300px) {
  .dropdown-container {
    right: $page-padding;
    top: $page-padding;
    position: fixed;
    margin: 0;
  }
  header {
    text-align: left;
  }
  .technologies {
    text-align: left;
  }
}
@media screen and (min-width: 700px) {
  .content {
    // padding: 5rem 15rem 1rem;
    padding: 20px 160px 10px;
  }
  header {
    position: fixed;
    left: $page-padding;
    top: $page-padding;
  }
  .technologies {
    position: fixed;
    bottom: $page-padding;
    left: $page-padding;
    // text-align: right;
  }
  .dropdown-container {
    flex-direction: row;
    align-items: center;
  }
  .gallery {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
  }
  .dropdown-label {
    padding-right: 1em;
  }
}

@keyframes appear {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@keyframes head-anim {
  from {
    transform: scale(2) translate(10vw, 10vh);
  }
  to {
    transform: scale(1);
  }
}
$delay-root: 1s;
$delay-block: 0.3s;
$delay-step: 0.2s;
@mixin stagger($i) {
  --delay: calc(#{$delay-root + $i * $delay-step} + var(--delay-block));
}
@mixin stagger-block($i) {
  --delay-block: #{$delay-root + $delay-block * $i};
}
body {
  --delay-block: #{$delay-root};
  @include stagger(1);
}
.appear,
.appear-container > * {
  animation: 0.3s var(--delay) appear both ease-in-out;
}
.one,
.appear {
  @include stagger(1);
}
.two {
  @include stagger(2);
}
.three {
  @include stagger(3);
}
.four {
  @include stagger(4);
}
.one-block {
  @include stagger-block(1);
}
.two-block {
  @include stagger-block(2);
}
.three-block {
  @include stagger-block(3);
}
.four-block {
  @include stagger-block(4);
}
.five-block {
  @include stagger-block(5);
}
header {
  animation: 0.5s both;
  animation-name: head-anim, appear;
  animation-delay: $delay-root, 0s;
  transform: scale(var(--scale));
  transform-origin: 0 0;
}
@media (hover: hover) {
  .svg-wrapper,
  .gallery-image {
    transition: opacity 0.2s;
    opacity: 0.5;

    &:hover {
      opacity: 1;
    }
  }
  .fullscreen :where(.svg-wrapper, .gallery-image) {
    opacity: 1;
  }
}
